/**
 * API v1
 * FormAPI is a service that helps you fill out and sign PDF templates.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FormAPI);
  }
}(this, function(expect, FormAPI) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FormAPI.PDFApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PDFApi', function() {
    describe('batchGeneratePdfV1', function() {
      it('should call batchGeneratePdfV1 successfully', function(done) {
        //uncomment below and update the code to test batchGeneratePdfV1
        //instance.batchGeneratePdfV1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchGeneratePdfs', function() {
      it('should call batchGeneratePdfs successfully', function(done) {
        //uncomment below and update the code to test batchGeneratePdfs
        //instance.batchGeneratePdfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('combinePdfs', function() {
      it('should call combinePdfs successfully', function(done) {
        //uncomment below and update the code to test combinePdfs
        //instance.combinePdfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('combineSubmissions', function() {
      it('should call combineSubmissions successfully', function(done) {
        //uncomment below and update the code to test combineSubmissions
        //instance.combineSubmissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCustomFileFromUpload', function() {
      it('should call createCustomFileFromUpload successfully', function(done) {
        //uncomment below and update the code to test createCustomFileFromUpload
        //instance.createCustomFileFromUpload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDataRequestToken', function() {
      it('should call createDataRequestToken successfully', function(done) {
        //uncomment below and update the code to test createDataRequestToken
        //instance.createDataRequestToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTemplate', function() {
      it('should call createTemplate successfully', function(done) {
        //uncomment below and update the code to test createTemplate
        //instance.createTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTemplateFromUpload', function() {
      it('should call createTemplateFromUpload successfully', function(done) {
        //uncomment below and update the code to test createTemplateFromUpload
        //instance.createTemplateFromUpload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('expireCombinedSubmission', function() {
      it('should call expireCombinedSubmission successfully', function(done) {
        //uncomment below and update the code to test expireCombinedSubmission
        //instance.expireCombinedSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('expireSubmission', function() {
      it('should call expireSubmission successfully', function(done) {
        //uncomment below and update the code to test expireSubmission
        //instance.expireSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generatePDF', function() {
      it('should call generatePDF successfully', function(done) {
        //uncomment below and update the code to test generatePDF
        //instance.generatePDF(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCombinedSubmission', function() {
      it('should call getCombinedSubmission successfully', function(done) {
        //uncomment below and update the code to test getCombinedSubmission
        //instance.getCombinedSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataRequest', function() {
      it('should call getDataRequest successfully', function(done) {
        //uncomment below and update the code to test getDataRequest
        //instance.getDataRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPresignUrl', function() {
      it('should call getPresignUrl successfully', function(done) {
        //uncomment below and update the code to test getPresignUrl
        //instance.getPresignUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubmission', function() {
      it('should call getSubmission successfully', function(done) {
        //uncomment below and update the code to test getSubmission
        //instance.getSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubmissionBatch', function() {
      it('should call getSubmissionBatch successfully', function(done) {
        //uncomment below and update the code to test getSubmissionBatch
        //instance.getSubmissionBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTemplate', function() {
      it('should call getTemplate successfully', function(done) {
        //uncomment below and update the code to test getTemplate
        //instance.getTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTemplateSchema', function() {
      it('should call getTemplateSchema successfully', function(done) {
        //uncomment below and update the code to test getTemplateSchema
        //instance.getTemplateSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTemplates', function() {
      it('should call getTemplates successfully', function(done) {
        //uncomment below and update the code to test getTemplates
        //instance.getTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testAuthentication', function() {
      it('should call testAuthentication successfully', function(done) {
        //uncomment below and update the code to test testAuthentication
        //instance.testAuthentication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDataRequest', function() {
      it('should call updateDataRequest successfully', function(done) {
        //uncomment below and update the code to test updateDataRequest
        //instance.updateDataRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
